app:
  description: ''
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: Demo_MakeReservation
  use_icon_as_answer_icon: false
dependencies: []
kind: app
version: 0.3.0
workflow:
  conversation_variables: []
  environment_variables:
  - description: ''
    id: f781fcb6-7036-45b2-83fd-3341844bd867
    name: APALEO_CLIENT_SECRET
    selector:
    - env
    - APALEO_CLIENT_SECRET
    value: QxKL6ljtZVfhUhUh9sEKg2FL7Dv13j
    value_type: secret
  - description: ''
    id: 78d81921-a387-4604-a4b0-da8fe4c74b91
    name: APALEO_CLIENT_ID
    selector:
    - env
    - APALEO_CLIENT_ID
    value: IJKE-SP-MYSPOT
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: http-request
      id: 1758772906371-source-1758772911049-target
      source: '1758772906371'
      sourceHandle: source
      target: '1758772911049'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: http-request
        targetType: code
      id: 1758772911049-source-1758772924842-target
      source: '1758772911049'
      sourceHandle: source
      target: '1758772924842'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: start
        targetType: code
      id: 1758772893798-source-17587733257940-target
      source: '1758772893798'
      sourceHandle: source
      target: '17587733257940'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: code
      id: 17587733257940-source-1758772906371-target
      source: '17587733257940'
      sourceHandle: source
      target: '1758772906371'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: code
        targetType: end
      id: 1758772924842-source-1758774359371-target
      source: '1758772924842'
      sourceHandle: source
      target: '1758774359371'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Start
        type: start
        variables:
        - label: arrival_date
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: arrival_date
        - label: departure_date
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: departure_date
        - label: number_of_adults
          max_length: 48
          options: []
          required: true
          type: number
          variable: number_of_adults
        - label: email
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: email
        - label: first_name
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: first_name
        - label: last_name
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: last_name
        - label: property_id
          max_length: 48
          options: []
          required: true
          type: text-input
          variable: property_id
      height: 246
      id: '1758772893798'
      position:
        x: 80
        y: 282
      positionAbsolute:
        x: 80
        y: 282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\nimport requests\nfrom datetime import datetime, timedelta,\
          \ timezone\n\nOFFERS_URL = \"https://api.apaleo.com/booking/v1/offers\"\n\
          \ndef _daily_slices(arrival_date: str, departure_date: str, rate_plan_id:\
          \ str):\n    a = datetime.fromisoformat(arrival_date).date()\n    d = datetime.fromisoformat(departure_date).date()\n\
          \    slices = []\n    cur = a\n    while cur < d:\n        nxt = cur + timedelta(days=1)\n\
          \        slices.append({\n            \"from\": datetime(cur.year, cur.month,\
          \ cur.day, tzinfo=timezone.utc).isoformat().replace(\"+00:00\", \"Z\"),\n\
          \            \"to\": datetime(nxt.year, nxt.month, nxt.day, tzinfo=timezone.utc).isoformat().replace(\"\
          +00:00\", \"Z\"),\n            \"ratePlanId\": rate_plan_id\n        })\n\
          \        cur = nxt\n    return slices\n\ndef main(access_token: str,\n \
          \        arrival_date: str,\n         departure_date: str,\n         number_of_adu:\
          \ int,\n         email: str,\n         first_name: str,\n         last_name:\
          \ str,\n         property_id: str,\n         channel_code: str = \"Direct\"\
          ,\n         units: int = 1):\n\n    # 1. 拉取 offers\n    headers = {\"Authorization\"\
          : f\"Bearer {access_token}\", \"Accept\": \"application/json\"}\n    params\
          \ = {\n        \"propertyId\": property_id,\n        \"arrival\": arrival_date,\n\
          \        \"departure\": departure_date,\n        \"adults\": number_of_adu,\n\
          \        \"units\": units,\n        \"includeClosed\": \"false\",\n    \
          \    \"includeUnavailable\": \"false\",\n    }\n    resp = requests.get(OFFERS_URL,\
          \ headers=headers, params=params, timeout=30)\n    resp.raise_for_status()\n\
          \    offers = resp.json().get(\"offers\", [])\n    if not offers:\n    \
          \    raise RuntimeError(\"No offers returned for given criteria\")\n\n \
          \   # 2. 找最贵的 offer\n    def price(o): return float((o.get(\"totalGrossAmount\"\
          ) or {}).get(\"amount\", 0))\n    best = sorted(offers, key=price, reverse=True)[0]\n\
          \n    rate_plan_id = (best.get(\"ratePlan\") or {}).get(\"id\") or best.get(\"\
          ratePlanId\")\n    unit_group_id = (best.get(\"unitGroup\") or {}).get(\"\
          id\") or best.get(\"unitGroupId\")\n\n    # 3. timeSlices：优先用 offer 自带的，否则按日期生成\n\
          \    slices = best.get(\"timeSlices\") or _daily_slices(arrival_date, departure_date,\
          \ rate_plan_id)\n    # 补全 ratePlanId\n    for s in slices:\n        if \"\
          ratePlanId\" not in s:\n            s[\"ratePlanId\"] = rate_plan_id\n\n\
          \    # 4. 构造 payload\n    payload_dict = {\n        \"booker\": {\n    \
          \        \"firstName\": first_name,\n            \"lastName\": last_name,\n\
          \            \"email\": email\n        },\n        \"reservations\": [\n\
          \            {\n                \"arrival\": arrival_date,\n           \
          \     \"departure\": departure_date,\n                \"propertyId\": property_id,\n\
          \                \"ratePlanId\": rate_plan_id,\n                \"unitGroupId\"\
          : unit_group_id,\n                \"adults\": number_of_adu,\n         \
          \       \"channelCode\": channel_code,\n                \"timeSlices\":\
          \ slices,\n                \"primaryGuest\": {\n                    \"firstName\"\
          : first_name,\n                    \"lastName\": last_name,\n          \
          \          \"email\": email\n                },\n                \"notes\"\
          : \"Booked via Dify workflow (most expensive offer)\"\n            }\n \
          \       ]\n    }\n\n    return {\"payload\": json.dumps(payload_dict)}"
        code_language: python3
        desc: ''
        outputs:
          payload:
            children: null
            type: string
        selected: false
        title: Code 2
        type: code
        variables:
        - value_selector:
          - '1758772893798'
          - arrival_date
          variable: arrival_date
        - value_selector:
          - '1758772893798'
          - departure_date
          variable: departure_date
        - value_selector:
          - '1758772893798'
          - number_of_adults
          variable: number_of_adu
        - value_selector:
          - '1758772893798'
          - email
          variable: email
        - value_selector:
          - '1758772893798'
          - first_name
          variable: first_name
        - value_selector:
          - '1758772893798'
          - last_name
          variable: last_name
        - value_selector:
          - '1758772893798'
          - property_id
          variable: property_id
        - value_selector:
          - '17587733257940'
          - access_token
          variable: access_token
      height: 54
      id: '1758772906371'
      position:
        x: 688
        y: 282
      positionAbsolute:
        x: 688
        y: 282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: '{{#17587733257940.access_token#}}'
            type: bearer
          type: api-key
        body:
          data:
          - id: key-value-31
            key: ''
            type: text
            value: '{{#1758772906371.payload#}}'
          type: json
        desc: ''
        headers: ''
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        ssl_verify: true
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: HTTP Request
        type: http-request
        url: https://api.apaleo.com/booking/v1/bookings
        variables: []
      height: 139
      id: '1758772911049'
      position:
        x: 992
        y: 282
      positionAbsolute:
        x: 992
        y: 282
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef main(body: str, status_code: int):\n    \"\"\"\n\
          \    Input:\n        body: HTTP node response body (string)\n        status_code:\
          \ HTTP node status code (int)\n    Output:\n        {\"message\": \"...\"\
          }  # single field with a polite summary\n    \"\"\"\n\n    # Parse body\
          \ into dict if possible\n    if isinstance(body, dict):\n        data =\
          \ body\n    else:\n        try:\n            data = json.loads(body)\n \
          \       except Exception:\n            data = {\"__raw__\": body}\n\n  \
          \  # Success branch\n    if 200 <= status_code < 300:\n        booking_id\
          \ = \"\"\n        reservation_ids = []\n        reservation_codes = []\n\
          \n        if isinstance(data, dict):\n            # Booking ID can appear\
          \ as \"id\" or \"bookingId\"\n            booking_id = data.get(\"id\")\
          \ or data.get(\"bookingId\") or \"\"\n\n            # Some responses contain\
          \ \"reservationIds\": [{\"id\": \"...\"}]\n            rid_list = data.get(\"\
          reservationIds\") or []\n            if isinstance(rid_list, list):\n  \
          \              for item in rid_list:\n                    if isinstance(item,\
          \ dict) and item.get(\"id\"):\n                        reservation_ids.append(str(item[\"\
          id\"]))\n\n            # Other responses may include \"reservations\": [{id,\
          \ code, ...}]\n            reservations = data.get(\"reservations\") or\
          \ []\n            if isinstance(reservations, list):\n                for\
          \ r in reservations:\n                    if isinstance(r, dict):\n    \
          \                    if r.get(\"id\"):\n                            reservation_ids.append(str(r[\"\
          id\"]))\n                        if r.get(\"code\"):\n                 \
          \           reservation_codes.append(str(r[\"code\"]))\n\n        # Build\
          \ a polite message\n        msg_lines = [\"✅ Your reservation has been successfully\
          \ created!\"]\n        if booking_id:\n            msg_lines.append(f\"\
          - Booking ID: {booking_id}\")\n        if reservation_ids:\n           \
          \ msg_lines.append(f\"- Reservation IDs: {', '.join(reservation_ids)}\"\
          )\n        if reservation_codes:\n            msg_lines.append(f\"- Reservation\
          \ Codes: {', '.join(reservation_codes)}\")\n\n        msg_lines.append(\"\
          Thank you for booking with us. We look forward to welcoming you!\")\n\n\
          \        return {\"message\": \"\\n\".join(msg_lines)}\n\n    # Failure\
          \ branch\n    error_text = \"\"\n    if isinstance(data, dict):\n      \
          \  msgs = data.get(\"messages\") or data.get(\"validationMessages\")\n \
          \       if isinstance(msgs, list) and msgs:\n            error_text = \"\
          ; \".join(str(m) for m in msgs)\n        elif data.get(\"error_description\"\
          ):\n            error_text = data[\"error_description\"]\n        elif data.get(\"\
          title\"):\n            error_text = data[\"title\"]\n        elif data.get(\"\
          error\"):\n            error_text = data[\"error\"]\n        elif \"__raw__\"\
          \ in data:\n            error_text = data[\"__raw__\"]\n        else:\n\
          \            error_text = json.dumps(data)[:300]\n    else:\n        error_text\
          \ = str(body)[:300]\n\n    polite_error = (\n        f\"❌ Unfortunately,\
          \ your reservation request could not be processed (HTTP {status_code}).\\\
          n\"\n        f\"Details: {error_text}\\n\"\n        \"Please check your\
          \ reservation details and try again. \"\n        \"If the issue persists,\
          \ kindly contact our support team for assistance.\"\n    )\n\n    return\
          \ {\"message\": polite_error}"
        code_language: python3
        desc: ''
        outputs:
          message:
            children: null
            type: string
        selected: false
        title: Code 3
        type: code
        variables:
        - value_selector:
          - '1758772911049'
          - body
          variable: body
        - value_selector:
          - '1758772911049'
          - status_code
          variable: status_code
      height: 54
      id: '1758772924842'
      position:
        x: 1300.1297402004377
        y: 282
      positionAbsolute:
        x: 1300.1297402004377
        y: 282
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import requests\nimport base64\n\ndef main(client_id: str, client_secret:\
          \ str, scope: str = \"\"):\n    \"\"\"\n    Args:\n        client_id: Apaleo\
          \ Client ID （你要传入的 id）\n        client_secret: Apaleo Client Secret （你要传入的\
          \ secret）\n        scope: 可选，建议传与你 App 权限一致的 scopes，用空格分隔\n            \
          \   例: \"inventory.read booking.read reservations.read reservations.write\
          \ booking.write\"\n    Returns:\n        {\n          \"access_token\":\
          \ \"<token or empty>\",\n          \"http_status\": <int>,\n          \"\
          error\": \"<error code if any>\",\n          \"error_description\": \"<human\
          \ readable if any>\",\n          \"raw\": \"<first 500 chars of body>\"\n\
          \        }\n    \"\"\"\n    url = \"https://identity.apaleo.com/connect/token\"\
          \n\n    # Basic Auth: base64(id:secret)\n    raw = f\"{client_id.strip()}:{client_secret.strip()}\"\
          .encode(\"utf-8\")\n    b64 = base64.b64encode(raw).decode(\"utf-8\")\n\n\
          \    headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\
          ,\n        \"Authorization\": f\"Basic {b64}\",\n    }\n\n    data = {\"\
          grant_type\": \"client_credentials\"}\n    if scope and scope.strip():\n\
          \        data[\"scope\"] = scope.strip()\n\n    try:\n        resp = requests.post(url,\
          \ headers=headers, data=data, timeout=20)\n    except Exception as e:\n\
          \        return {\n            \"access_token\": \"\",\n            \"http_status\"\
          : 0,\n            \"error\": \"request_exception\",\n            \"error_description\"\
          : str(e),\n            \"raw\": \"\"\n        }\n\n    text = resp.text\
          \ or \"\"\n    # 尝试 JSON 解析\n    try:\n        body = resp.json()\n    except\
          \ Exception:\n        body = {}\n\n    token = body.get(\"access_token\"\
          , \"\") if isinstance(body, dict) else \"\"\n    error = body.get(\"error\"\
          , \"\") if isinstance(body, dict) else \"\"\n    error_desc = body.get(\"\
          error_description\", \"\") if isinstance(body, dict) else \"\"\n\n    #\
          \ 只要成功返回就给 token；否则把错误信息带上\n    return {\n        \"access_token\": token\n\
          \    }"
        code_language: python3
        desc: ''
        outputs:
          access_token:
            children: null
            type: string
        selected: false
        title: GetToken
        type: code
        variables:
        - value_selector:
          - env
          - APALEO_CLIENT_SECRET
          variable: client_secret
        - value_selector:
          - env
          - APALEO_CLIENT_ID
          variable: client_id
      height: 54
      id: '17587733257940'
      position:
        x: 396.2639071811092
        y: 298.51896080175106
      positionAbsolute:
        x: 396.2639071811092
        y: 298.51896080175106
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1758772924842'
          - message
          variable: message
        selected: false
        title: End
        type: end
      height: 90
      id: '1758774359371'
      position:
        x: 1600
        y: 282
      positionAbsolute:
        x: 1600
        y: 282
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: -501.95076514375756
      y: 412.63652717653383
      zoom: 0.4842919658209974
